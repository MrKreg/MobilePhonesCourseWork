<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>